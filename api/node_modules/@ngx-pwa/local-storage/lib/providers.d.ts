import { EnvironmentProviders } from "@angular/core";
/**
 * Allows to add a prefix before `localStorage` keys.
 * *Use only* for interoperability with other APIs or to avoid collision for multiple apps on the same subdomain.
 * **WARNING: do not change this option in an app already deployed in production, as previously stored data would be lost.**
 *
 * @example
 * bootstrapApplication(AppComponent, {
 *   providers: [provideLocalStoragePrefix('custom_')]
 * });
 */
export declare function provideLocalStoragePrefix(prefix: string): EnvironmentProviders;
/**
 * Allows to change the name used for `indexedDB` database.
 * *Use only* for interoperability with other APIs or to avoid collision for multiple apps on the same subdomain.
 * **WARNING: do not change this option in an app already deployed in production, as previously stored data would be lost.**
 *
 * @example
 * bootstrapApplication(AppComponent, {
 *   providers: [provideIndexedDBDataBaseName('custom')]
 * });
 */
export declare function provideIndexedDBDataBaseName(name: string): EnvironmentProviders;
/**
 * Allows to change the database version used for `indexedDB` database.
 * Must be an unsigned **integer**.
 * **Use with caution as the creation of the store depends on the version.**
 * *Use only* for interoperability with other APIs or to avoid collision for multiple apps on the same subdomain.
 * **WARNING: do not change this option in an app already deployed in production, as previously stored data would be lost.**
 *
 * @example
 * bootstrapApplication(AppComponent, {
 *   providers: [provideIndexedDBDataBaseVersion(2)]
 * });
 */
export declare function provideIndexedDBDataBaseVersion(version: number): EnvironmentProviders;
/**
 * Allows to change the name used for `indexedDB` object store.
 * *Use only* for interoperability with other APIs.
 * **WARNING: do not change this option in an app already deployed in production, as previously stored data would be lost.**
 *
 * @example
 * bootstrapApplication(AppComponent, {
 *   providers: [provideIndexedDBStoreName('custom')]
 * });
 */
export declare function provideIndexedDBStoreName(name: string): EnvironmentProviders;
